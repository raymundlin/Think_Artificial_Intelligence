# Source: "Think Artificial Intelligence" by Jerry Cuomo, 2024
# Purpose: Educational code examples from the book.
# Copyright © 2024 Jerry Cuomo. All rights reserved.
#
# This code was autogenerated by GPT-4, from the following prompt:
# Prompt: Predict the future electric range of Battery Electric Vehicles (BEVs) from 'datasets/electric_vehicle_population_data.csv' for the years 2025 to 2030 using linear regression, based on the MODEL YEAR and ELECTRIC RANGE data fields.
#
# About: This script applies linear regression to predict the future electric range of BEVs based on their model year, focusing on data from 'datasets/electric_vehicle_population_data.csv'. 
# It utilizes Python's pandas for data manipulation, numpy for numerical calculations, scikit-learn for the linear regression model, and matplotlib for visualizing actual data versus predicted future ranges.
#
# Setup: Python installed, with 'datasets/electric_vehicle_population_data.csv' in your directory. 
# Install pandas, numpy, scikit-learn, and matplotlib using 'pip install pandas numpy scikit-learn matplotlib'.

import pandas as pd
import numpy as np
from sklearn.linear_model import LinearRegression
import matplotlib.pyplot as plt

# Load the dataset
df = pd.read_csv('../datasets/electric_vehicle_population_data.csv')

# Filter for only Battery Electric Vehicles (BEVs) with valid electric ranges
df = df[(df['Electric Vehicle Type'] == 'Battery Electric Vehicle (BEV)') & (df['Electric Range'] > 0)]

# Prepare the data for linear regression
X = df[['Model Year']]  # Independent variable
y = df['Electric Range']  # Dependent variable

# Fit the linear regression model
model = LinearRegression()
model.fit(X, y)

# Predict electric ranges for 2025 to 2030
future_years = np.array([[year] for year in range(2025, 2031)])
predicted_ranges = model.predict(future_years)

# Plotting
plt.figure(figsize=(12, 8))
# plt.scatter(df['Model Year'], df['Electric Range'], alpha=0.5, label='Actual Data')
plt.scatter(df['Model Year'], df['Electric Range'], alpha=0.5, label='實際資料')
# plt.plot(future_years, predicted_ranges, 'r-', label='Predicted Ranges')
plt.plot(future_years, predicted_ranges, 'r-', label='預測續航里程')

# Annotate predicted ranges on the plot
for year, range in zip(future_years, predicted_ranges):
    plt.annotate(f"{int(range)} mi", (year, range), textcoords="offset points", xytext=(-25,0), ha='center')

plt.rcParams['font.sans-serif'] = ['Arial Unicode Ms']
# plt.title('EV Ranges Prediction (2025-2030)')
plt.title('電動車續航預測 (2025-2030)')
# plt.xlabel('Model Year')
plt.xlabel('車型年份')
# plt.ylabel('Electric Range (mi)')
plt.ylabel('電池續航里程 (英里)')
plt.legend()
plt.grid(True)
plt.savefig('AI_LifecyclePersonasVisualization.png', format='png', bbox_inches='tight', dpi=1200)
plt.show()
